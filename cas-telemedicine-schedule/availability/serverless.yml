app: telemedicine-schedule
service: telemedicine-schedule-availability
useDotenv: true

plugins:
  - "@nearst/serverless-dynalite"
  - serverless-webpack
  - serverless-offline

provider:
  name: aws
  runtime: nodejs16.x
  environment:
    SERVICE_NAME: ${self:service}
    DYNAMODB_TABLE: ${self:service}-${sls:stage}-table
  apiGateway:
    restApiId: ${self:custom.resource.ApiGatewayRestApiId}
    restApiRootResourceId: ${self:custom.resource.ApiGatewayRestApiRootResourceId}
  tracing:
    lambda: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:BatchWriteItem
          Resource: "*"

custom:
  resource:
    ApiGatewayRestApiId:
      "Fn::ImportValue": ${self:app}-resource-${sls:stage}-ApiGatewayRestApiId
    ApiGatewayRestApiRootResourceId:
      "Fn::ImportValue": ${self:app}-resource-${sls:stage}-ApiGatewayRestApiRootResourceId
  cas-medicap-replicator:
    EventBusName:
      "Fn::ImportValue": medicap-replicator-resource-${sls:stage}-EventBusName

functions:
  httpAvailabilityProfessionalGet:
    handler: ./src/handler/http-availability-professional-get/index.handler
    events:
      - http:
          path: /availability/professional/{professionalId}
          method: get
          cors: true

  eventMedicapBookingSynced:
    handler: ./src/handler/event-medicap-booking-synced/index.handler
    events:
      - eventBridge:
          eventBus: ${self:custom.cas-medicap-replicator.EventBusName}
          pattern:
            source:
              - medicap-replicator-message
            detail-type:
              - booking.updated

  eventMedicapPreBookingSynced:
    handler: ./src/handler/event-medicap-pre-booking-synced/index.handler
    events:
      - eventBridge:
          eventBus: ${self:custom.cas-medicap-replicator.EventBusName}
          pattern:
            source:
              - medicap-replicator-message
            detail-type:
              - pre-booking.updated

  eventMedicapReleaseSynced:
    handler: ./src/handler/event-medicap-release-synced/index.handler
    events:
      - eventBridge:
          eventBus: ${self:custom.cas-medicap-replicator.EventBusName}
          pattern:
            source:
              - medicap-replicator-message
            detail-type:
              - release.updated

  eventMedicapCalendarSynced:
    handler: ./src/handler/event-medicap-calendar-synced/index.handler
    events:
      - eventBridge:
          eventBus: ${self:custom.cas-medicap-replicator.EventBusName}
          pattern:
            source:
              - medicap-replicator-message
            detail-type:
              - calendar.updated

  eventMedicapExceptionSynced:
    handler: ./src/handler/event-medicap-exception-synced/index.handler
    events:
      - eventBridge:
          eventBus: ${self:custom.cas-medicap-replicator.EventBusName}
          pattern:
            source:
              - medicap-replicator-message
            detail-type:
              - exception.updated

resources:
  Resources:
    DynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: _pk
            AttributeType: S
          - AttributeName: _sk
            AttributeType: S
          - AttributeName: _gsi1pk
            AttributeType: S
          - AttributeName: _gsi1sk
            AttributeType: S
        KeySchema:
          - AttributeName: _pk
            KeyType: HASH
          - AttributeName: _sk
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: gsi1
            KeySchema:
              - AttributeName: _gsi1pk
                KeyType: HASH
              - AttributeName: _gsi1sk
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
